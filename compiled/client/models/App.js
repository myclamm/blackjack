// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var deck;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      return (this.get('playerHand')).on('stand', (function(_this) {
        return function() {
          (_this.get('dealerHand')).at(0).flip();
          while ((_this.get("dealerHand").scores()[0] < 17) || (_this.get("dealerHand").scores()[1] < 17 && _this.get("dealerHand").scores()[1])) {
            (_this.get('dealerHand')).hit();
          }
          return _this.compareScores();
        };
      })(this));
    };

    App.prototype.compareScores = function() {
      if (21 - (this.get('playerHand')).scores()[0] < 21 - (this.get('dealerHand')).scores()[0]) {
        console.log('you win');
        return 'you win';
      } else if (21 - (this.get('playerHand')).scores()[1] < 21 - (this.get('dealerHand')).scores()[1]) {
        console.log('you win');
        return 'you win';
      } else if (21 - (this.get('playerHand')).scores()[1] < 21 - (this.get('dealerHand')).scores()[0]) {
        console.log('you win');
        return 'you win';
      } else if (21 - (this.get('playerHand')).scores()[0] < 21 - (this.get('dealerHand')).scores()[1]) {
        console.log('you win');
        return 'you win';
      } else {
        console.log('you lose in AppView');
        return 'you lose';
      }
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.map
