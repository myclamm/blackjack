// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.PreviousRoundsView = (function(_super) {
    __extends(PreviousRoundsView, _super);

    function PreviousRoundsView() {
      return PreviousRoundsView.__super__.constructor.apply(this, arguments);
    }

    PreviousRoundsView.prototype.className = 'previous-rounds';

    PreviousRoundsView.prototype.template = _.template('<h2>Previous Rounds</h2>');

    PreviousRoundsView.prototype.initialize = function() {
      console.log(this.collection, 'Previous Rounds Collection View');
      this.render();
      return this.collection.on('add', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    };

    PreviousRoundsView.prototype.render = function() {
      this.$el.children().detach();
      this.$el.html(this.template(this.collection));
      return this.$el.append(this.collection.map(function(hand) {
        debugger;
        return new PreviousRoundView({
          collection: hand
        });
      }));
    };

    return PreviousRoundsView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=PreviousRoundsView.map
